TOKEN:		LEXEME
INT_DEC		int
PROGRAM_START	main
OPEN_PAR	(
ID	void
CLOSE_PAR	)
OPEN_CURBRACK	{
INT_DEC		int
ID	num
ID	denom
ID	quot
ID	rem
END_DEL	;
READ_FUNC	read
ID	num
ID	denom
END_DEL	;
IF_STMT		if
ID	denom
EQUAL_OP	==
INT		0
ID	then
WRITE_FUNC	write
OPEN_PAR	(
ID	the
ID	denominator
ID	has
ID	an
ID	invalid
ID	value
INT		0
CLOSE_PAR	)
END_DEL	;
ELSE_STMT	else
OPEN_CURBRACK	{
ID	rem
ASSIGN_OP	=
ID	num
END_DEL	;
ID	quot
ASSIGN_OP	=
INT		0
WHILE_LOOP	while
ID	rem
EQUAL_OP	==
ID	denom
DO_STMT		do
OPEN_CURBRACK	{
ID	rem
ASSIGN_OP	=
ID	rem
ID	denom
END_DEL	;
ID	quot
ASSIGN_OP	=
ID	quot
ADD_OP		+
INT		1
CLOSE_CURBRACK	}
END_DEL	;
WRITE_FUNC	write
OPEN_PAR	(
STR_LIT	"quotient = "
ID	quot
CLOSE_PAR	)
END_DEL	;
WRITE_FUNC	write
OPEN_PAR	(
STR_LIT	"remainder = "
ID	rem
CLOSE_PAR	)
END_DEL	;
CLOSE_CURBRACK	}
END_DEL	;
ID	String
INT		420
ID	return
INT		0
CLOSE_CURBRACK	}
